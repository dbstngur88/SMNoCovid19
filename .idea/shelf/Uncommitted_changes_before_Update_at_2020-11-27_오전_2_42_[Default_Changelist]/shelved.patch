Index: app/src/main/java/com/example/smnocovid19/TimeLineActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smnocovid19;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.firebase.database.ChildEventListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.sql.Time;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Date;\r\npublic class TimeLineActivity extends AppCompatActivity {\r\n    List<User> timeLineList = new ArrayList<>();\r\n    RecyclerView mRecyclerView;\r\n    Context context;\r\n\r\n    RecyclerView.LayoutManager layoutManager;\r\n\r\n    TimeLineAdapter adapter;\r\n    private DatabaseReference timeLineDbRef;\r\n\r\n    TextView txtBuilding;\r\n    TextView txtFloor;\r\n    TextView txtTime;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_time_line);\r\n\r\n        txtBuilding = findViewById(R.id.txtBuilding);\r\n        txtFloor = findViewById(R.id.txtFloor);\r\n        txtTime = findViewById(R.id.txtTime);\r\n        //recyclerview 설정\r\n        mRecyclerView = findViewById(R.id.timeline_view);\r\n        layoutManager = new LinearLayoutManager(this);\r\n        mRecyclerView.setLayoutManager(layoutManager);\r\n\r\n        timeLineDbRef = FirebaseDatabase.getInstance().getReference(\"timeline/1\");\r\n        timeLineDbRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                User timeLine = snapshot.getValue(User.class);\r\n                timeLineList.clear(); //기존 배열리스트가 존재하지 않게 초기화\r\n                //realtimeDB의 실시간 시간 설정\r\n                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n                String strDate = simpleDateFormat.format(new Date());\r\n                timeLine.setUpdateTime(strDate);\r\n                timeLineDbRef.setValue(timeLine);\r\n                //담은 데이터들을 배열리스트에 넣음\r\n                timeLineList.add(timeLine);\r\n\r\n                //어댑터 연결\r\n                adapter = new TimeLineAdapter(TimeLineActivity.this, timeLineList, context);\r\n                mRecyclerView.setAdapter(adapter);\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smnocovid19/TimeLineActivity.java	(revision 8f9cbb86825505ef5c71bbd7af57fa55d92b6cda)
+++ app/src/main/java/com/example/smnocovid19/TimeLineActivity.java	(date 1606412045619)
@@ -7,6 +7,7 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import android.content.Context;
+import android.nfc.Tag;
 import android.os.Bundle;
 import android.util.Log;
 import android.widget.ArrayAdapter;
@@ -19,15 +20,19 @@
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.GenericTypeIndicator;
 import com.google.firebase.database.ValueEventListener;
 
 import java.sql.Time;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Date;
+import java.util.Map;
+
 public class TimeLineActivity extends AppCompatActivity {
-    List<User> timeLineList = new ArrayList<>();
+    List<User> timeLineList = new ArrayList<User>();
     RecyclerView mRecyclerView;
     Context context;
 
@@ -35,6 +40,7 @@
 
     TimeLineAdapter adapter;
     private DatabaseReference timeLineDbRef;
+    private static final String TAG = "TimeLineActivity";
 
     TextView txtBuilding;
     TextView txtFloor;
@@ -44,7 +50,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_time_line);
-
+        setTitle("Time Line");
         txtBuilding = findViewById(R.id.txtBuilding);
         txtFloor = findViewById(R.id.txtFloor);
         txtTime = findViewById(R.id.txtTime);
@@ -52,29 +58,44 @@
         mRecyclerView = findViewById(R.id.timeline_view);
         layoutManager = new LinearLayoutManager(this);
         mRecyclerView.setLayoutManager(layoutManager);
-
-        timeLineDbRef = FirebaseDatabase.getInstance().getReference("timeline/1");
+        //타임라인의 인스턴스 정보를 가져옴
+        timeLineDbRef = FirebaseDatabase.getInstance().getReference("timeline");
         timeLineDbRef.addValueEventListener(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                User timeLine = snapshot.getValue(User.class);
-                timeLineList.clear(); //기존 배열리스트가 존재하지 않게 초기화
-                //realtimeDB의 실시간 시간 설정
-                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-                String strDate = simpleDateFormat.format(new Date());
-                timeLine.setUpdateTime(strDate);
-                timeLineDbRef.setValue(timeLine);
-                //담은 데이터들을 배열리스트에 넣음
-                timeLineList.add(timeLine);
-
-                //어댑터 연결
-                adapter = new TimeLineAdapter(TimeLineActivity.this, timeLineList, context);
-                mRecyclerView.setAdapter(adapter);
+
+                for(DataSnapshot postSnapshot : snapshot.getChildren()) {
+                    timeLineList.add(postSnapshot.getValue(User.class));
+                    //User user = postSnapshot.child("timeline").getValue(User.class);
+
+                    //timeLineDbRef.setValue(timeLine);
+                    //timeLineList.add(timeLine);
+                }
+
+
+
+
+                //기존 배열리스트가 존재하지 않게 초기화
+                //timeLineList.clear();
+               /* for(DataSnapshot ds : snapshot.getChildren()) {
+                    User timeLine = ds.child("timeline").getValue(User.class);
+                    timeLineDbRef.setValue(timeLine);
+                    //담은 데이터들을 배열리스트에 넣음
+                    timeLineList.add(timeLine);
+                    adapter = new TimeLineAdapter(TimeLineActivity.this, timeLineList, context);
+                    mRecyclerView.setAdapter(adapter);
+                }
+                //어댑터 연결*/
+
             }
+
             @Override
             public void onCancelled(@NonNull DatabaseError error) {
+                Log.w(TAG, "loadPost:onCancelled", error.toException());
+            }
 
-            }
-        });
-    }
-}
\ No newline at end of file
+        });
+        adapter = new TimeLineAdapter(TimeLineActivity.this, timeLineList, context);
+        mRecyclerView.setAdapter(adapter);
+    }
+}
Index: app/src/main/res/layout/activity_time_line.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".TimeLineActivity\">\r\n<LinearLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_margin=\"10dp\">\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/timeline_view\"\r\n        tools:listitem=\"@layout/timeline_item\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_width=\"match_parent\"\r\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"/>\r\n   </LinearLayout>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_time_line.xml	(revision 8f9cbb86825505ef5c71bbd7af57fa55d92b6cda)
+++ app/src/main/res/layout/activity_time_line.xml	(date 1606393759678)
@@ -6,6 +6,15 @@
     android:layout_height="match_parent"
     android:orientation="vertical"
     tools:context=".TimeLineActivity">
+    <Button
+        android:id="@+id/btnRefresh"
+        android:layout_gravity="right"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="새로고침"
+        android:textSize="25dp"
+        android:textStyle="bold">
+    </Button>
 <LinearLayout
     android:layout_width="match_parent"
     android:layout_height="match_parent"
Index: app/src/main/java/com/example/smnocovid19/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smnocovid19;\r\n\r\npublic class User {\r\n    public String userNumber;\r\n    public String buildingFloor;\r\n    public String buildingName;\r\n    public String updateTime;\r\n\r\n    public User() {\r\n\r\n    }\r\n\r\n    public User(String buildingFloor, String buildingName, String updateTime) {\r\n//        this.userNumber = userNumber;\r\n        this.buildingFloor = buildingFloor;\r\n        this.buildingName = buildingName;\r\n        this.updateTime = updateTime;\r\n    }\r\n\r\n    public String getUserNumber() {\r\n        return userNumber;\r\n    }\r\n\r\n    public void setUserNumber(String userNumber) {\r\n        this.userNumber = userNumber;\r\n    }\r\n\r\n    public String getBuildingFloor() {\r\n        return buildingFloor;\r\n    }\r\n\r\n    public void setBuildingFloor(String buildingFloor) {\r\n        this.buildingFloor = buildingFloor;\r\n    }\r\n\r\n    public String getBuildingName() {\r\n        return buildingName;\r\n    }\r\n\r\n    public void setBuildingName(String buildingName) {\r\n        this.buildingName = buildingName;\r\n    }\r\n\r\n    public String getUpdateTime() {\r\n        return updateTime;\r\n    }\r\n\r\n    public void setUpdateTime(String updateTime) {\r\n        this.updateTime = updateTime;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"timeline{\" +\r\n//                \"userNumber ='\" + userNumber + '\\'' +\r\n                \" buildingFloor ='\" + buildingFloor + '\\'' +\r\n                \", buildingName ='\" + buildingName + '\\'' +\r\n                \", updateTime ='\" + updateTime + '\\'' +\r\n                '}';\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smnocovid19/User.java	(revision 8f9cbb86825505ef5c71bbd7af57fa55d92b6cda)
+++ app/src/main/java/com/example/smnocovid19/User.java	(date 1606393759692)
@@ -11,7 +11,7 @@
     }
 
     public User(String buildingFloor, String buildingName, String updateTime) {
-//        this.userNumber = userNumber;
+        this.userNumber = userNumber;
         this.buildingFloor = buildingFloor;
         this.buildingName = buildingName;
         this.updateTime = updateTime;
Index: app/src/main/java/com/example/smnocovid19/QrCodeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.smnocovid19;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.renderscript.Sampler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport static java.security.AccessController.getContext;\r\n\r\npublic class QrCodeActivity extends AppCompatActivity {\r\n    private Button btn_check;\r\n    private TextView textViewUserNumber, textViewBuildingFloor, textViewBuildingName, textViewUpdateTime;\r\n    private IntentIntegrator qrScan;\r\n    private DatabaseReference mDatabase;\r\n    int a = 0;\r\n\r\n    long now = System.currentTimeMillis();\r\n    Date date = new Date(now);\r\n    SimpleDateFormat sdfNow = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n    private String formatDate = sdfNow.format(date); // 현재시간을 가지고있음.\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_qrcode);\r\n\r\n        btn_check = findViewById(R.id.check);\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n        readUser();\r\n\r\n        btn_check.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n               // String getUserNumber = textViewUserNumber.getText().toString();\r\n                String getBuildingFloor = textViewBuildingFloor.getText().toString();\r\n                String getBuildingName = textViewBuildingName.getText().toString();\r\n                String getUpdateTime = formatDate;\r\n\r\n                HashMap result = new HashMap<>();\r\n               // result.put(\"학번\", getUserNumber);\r\n                result.put(\"층\", getBuildingFloor);\r\n                result.put(\"건물\", getBuildingName);\r\n                result.put(\"입장시간\", getUpdateTime);\r\n\r\n                a = a + 1;\r\n                writeNewUser(a, getBuildingFloor, getBuildingName, getUpdateTime);\r\n\r\n            }\r\n        });\r\n\r\n       // textViewUserNumber = (TextView) findViewById(R.id.textViewUserNumber);\r\n        textViewBuildingName = (TextView) findViewById(R.id.textViewBuildingName);\r\n        textViewBuildingFloor = (TextView) findViewById(R.id.textViewBuildingFloor);\r\n//        textViewUpdateTime = findViewById(R.id.textViewUpdateTime);\r\n\r\n        qrScan = new IntentIntegrator(this);\r\n        qrScan.setOrientationLocked(false);\r\n        qrScan.setPrompt(\"사각형에 QR코드를 맞춰주세요\");\r\n        qrScan.initiateScan();\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\r\n        if (result != null) {\r\n            if (result.getContents() == null) {\r\n                Toast.makeText(QrCodeActivity.this, \"취소하였습니다\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                Toast.makeText(QrCodeActivity.this, \"인식되었습니다 \" + result.getContents(), Toast.LENGTH_SHORT).show();\r\n                try {\r\n                    JSONObject obj = new JSONObject(result.getContents());\r\n                   // textViewUserNumber.setText(obj.getString(\"\"));\r\n                    textViewBuildingName.setText(obj.getString(\"buildingName\"));\r\n                    textViewBuildingFloor.setText(obj.getString(\"buildingFloor\"));\r\n//                    textViewUpdateTime.setText(obj.getString(\"updateDate\"));\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                    textViewBuildingName.setText(result.getContents());\r\n                }\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n        }\r\n    }\r\n\r\n    private void writeNewUser(int userId, String getBuildingFloor, String getBuildingName, String getUpdateTime) {\r\n        User user = new User(getBuildingFloor, getBuildingName, getUpdateTime);\r\n\r\n        mDatabase.child(\"timeline\").child(String.valueOf(userId)).setValue(user)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast.makeText(QrCodeActivity.this, \"등록되었습니다\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(QrCodeActivity.this,\"등록을 실패했습니다\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n    private void readUser() {\r\n        mDatabase.child(\"timeline\").child(\"1\").addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.getValue(User.class) != null) {\r\n                    User post = dataSnapshot.getValue(User.class);\r\n                    Log.w(\"FireBaseData\", \"getData\" + post.toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.w(\"FireBaseData\", \"loadPost:onCancelled\", databaseError.toException());\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/smnocovid19/QrCodeActivity.java	(revision 8f9cbb86825505ef5c71bbd7af57fa55d92b6cda)
+++ app/src/main/java/com/example/smnocovid19/QrCodeActivity.java	(date 1606395272313)
@@ -87,18 +87,18 @@
         IntentResult result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
         if (result != null) {
             if (result.getContents() == null) {
-                Toast.makeText(QrCodeActivity.this, "취소하였습니다", Toast.LENGTH_SHORT).show();
+                Toast.makeText(this, "취소하였습니다", Toast.LENGTH_SHORT).show();
             } else {
-                Toast.makeText(QrCodeActivity.this, "인식되었습니다 " + result.getContents(), Toast.LENGTH_SHORT).show();
+                Toast.makeText(this, "인식되었습니다 " + result.getContents(), Toast.LENGTH_SHORT).show();
                 try {
                     JSONObject obj = new JSONObject(result.getContents());
-                   // textViewUserNumber.setText(obj.getString(""));
-                    textViewBuildingName.setText(obj.getString("buildingName"));
+                    //textViewUserNumber.setText(obj.getString(""));
                     textViewBuildingFloor.setText(obj.getString("buildingFloor"));
-//                    textViewUpdateTime.setText(obj.getString("updateDate"));
+                    textViewBuildingName.setText(obj.getString("buildingName"));
+                    textViewUpdateTime.setText(obj.getString("updateDate"));
                 } catch (JSONException e) {
                     e.printStackTrace();
-                    textViewBuildingName.setText(result.getContents());
+                    // textViewUserNumber.setText(result.getContents());
                 }
             }
         } else {
@@ -106,10 +106,10 @@
         }
     }
 
-    private void writeNewUser(int userId, String getBuildingFloor, String getBuildingName, String getUpdateTime) {
+    public void writeNewUser(int userId, String getBuildingFloor, String getBuildingName, String getUpdateTime) {
         User user = new User(getBuildingFloor, getBuildingName, getUpdateTime);
 
-        mDatabase.child("timeline").child(String.valueOf(userId)).setValue(user)
+        mDatabase.child("timeline").setValue(user)
                 .addOnSuccessListener(new OnSuccessListener<Void>() {
                     @Override
                     public void onSuccess(Void aVoid) {
@@ -124,7 +124,7 @@
                 });
     }
     private void readUser() {
-        mDatabase.child("timeline").child("1").addValueEventListener(new ValueEventListener() {
+        mDatabase.child("timeline").addValueEventListener(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                 if (dataSnapshot.getValue(User.class) != null) {
@@ -138,8 +138,6 @@
                 Log.w("FireBaseData", "loadPost:onCancelled", databaseError.toException());
             }
         });
-
     }
-
 }
 
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-25__2_14__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-25__2_14__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-23__10_53__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2020-11-23__10_53__Default_Changelist_.xml
